{"ast":null,"code":"var _jsxFileName = \"/Users/ChristinaGerard/Desktop/Life/personal_projects/in_progress/La-Mode/client/src/home/components/NavigationIcon.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./NavigationIcon.css\";\nconst initialStyle = {\n  width: \"3vw\",\n  height: \"10px\",\n  backgroundColor: \"#623b3c\",\n  borderRadius: \"4px\",\n  margin: \"auto\",\n  transition: \"height .8s\"\n};\nconst barStyles = {\n  initial: initialStyle,\n  intialActive: { ...initialStyle,\n    height: \"10px\",\n    transition: \"height .8s\",\n    animation: \"moveRight .6s\"\n  },\n  active: { ...initialStyle,\n    position: \"absolute\",\n    left: \"20vw\",\n    height: \"20px\",\n    transition: \"height .1s\",\n    animation: \"moveLeft .4s\"\n  }\n};\nconst log = console.log;\n\nconst NavigationIcon = props => {\n  const {\n    openNavClickedOnce\n  } = props;\n  const [currentBarStyles, updateCurrentBarStyles] = useState(barStyles.initial);\n  const [barStyleStatus, updateBarStyleStatus] = useState(\"initial\");\n\n  const handleStyleChange = () => {\n    if (barStyleStatus === \"initial\") {\n      updateCurrentBarStyles(barStyles.active);\n      updateBarStyleStatus(\"active\"); // updates if the navigation should show or not\n\n      props.handleShowNav(true);\n      props.updateOpenNavClickedOnce(true);\n      log(\"initial ->  active\");\n      log(currentBarStyles);\n    } else if (barStyleStatus === \"active\") {\n      log(\"active => initial\");\n      updateCurrentBarStyles(barStyles.intialActive);\n      updateBarStyleStatus(\"initial\");\n      log(currentBarStyles); // this will update if the nav should be shown\n\n      props.handleShowNav(false);\n    }\n  };\n\n  useEffect(() => {\n    if (openNavClickedOnce && barStyleStatus === \"initial\") {\n      log(\"INITIAL\");\n    } else if (barStyleStatus === \"active\") {}\n  }, [openNavClickedOnce, barStyleStatus]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navigationIcon__container\",\n    onClick: handleStyleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, [\"one\", \"two\"].map((order, idx) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `navigationIcon__bar navigationIcon__bar-${order}`,\n      key: idx,\n      style: currentBarStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default NavigationIcon;","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/Life/personal_projects/in_progress/La-Mode/client/src/home/components/NavigationIcon.js"],"names":["React","useState","useEffect","initialStyle","width","height","backgroundColor","borderRadius","margin","transition","barStyles","initial","intialActive","animation","active","position","left","log","console","NavigationIcon","props","openNavClickedOnce","currentBarStyles","updateCurrentBarStyles","barStyleStatus","updateBarStyleStatus","handleStyleChange","handleShowNav","updateOpenNavClickedOnce","map","order","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./NavigationIcon.css\";\n\nconst initialStyle = {\n  width: \"3vw\",\n  height: \"10px\",\n  backgroundColor: \"#623b3c\",\n  borderRadius: \"4px\",\n  margin: \"auto\",\n  transition: \"height .8s\",\n};\n\nconst barStyles = {\n  initial: initialStyle,\n  intialActive: {\n    ...initialStyle,\n    height: \"10px\",\n    transition: \"height .8s\",\n    animation: \"moveRight .6s\",\n  },\n  active: {\n    ...initialStyle,\n    position: \"absolute\",\n    left: \"20vw\",\n    height: \"20px\",\n    transition: \"height .1s\",\n    animation: \"moveLeft .4s\",\n  },\n};\n\nconst log = console.log;\nconst NavigationIcon = (props) => {\n  const { openNavClickedOnce } = props;\n  const [currentBarStyles, updateCurrentBarStyles] = useState(\n    barStyles.initial\n  );\n\n  const [barStyleStatus, updateBarStyleStatus] = useState(\"initial\");\n\n  const handleStyleChange = () => {\n    if (barStyleStatus === \"initial\") {\n      updateCurrentBarStyles(barStyles.active);\n      updateBarStyleStatus(\"active\");\n\n      // updates if the navigation should show or not\n      props.handleShowNav(true);\n      props.updateOpenNavClickedOnce(true);\n\n      log(\"initial ->  active\");\n\n      log(currentBarStyles);\n    } else if (barStyleStatus === \"active\") {\n      log(\"active => initial\");\n\n      updateCurrentBarStyles(barStyles.intialActive);\n\n      updateBarStyleStatus(\"initial\");\n\n      log(currentBarStyles);\n      // this will update if the nav should be shown\n      props.handleShowNav(false);\n    }\n  };\n\n  useEffect(() => {\n\n    if (openNavClickedOnce && barStyleStatus === \"initial\") {\n      log(\"INITIAL\");\n\n    } else if (barStyleStatus === \"active\") {\n    }\n\n  }, [openNavClickedOnce, barStyleStatus]);\n\n  return (\n    <span className=\"navigationIcon__container\" onClick={handleStyleChange}>\n      {[\"one\", \"two\"].map((order, idx) => {\n        return (\n          <div\n            className={`navigationIcon__bar navigationIcon__bar-${order}`}\n            key={idx}\n            style={currentBarStyles}\n          ></div>\n        );\n      })}\n    </span>\n  );\n};\n\nexport default NavigationIcon;"]},"metadata":{},"sourceType":"module"}